// <auto-generated />
using BibleSemanticSearcher.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibleSemanticSearcher.Infrastructure.Migrations
{
    [DbContext(typeof(BibleDbContext))]
    [Migration("20241217101350_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibleSemanticSearcher.Domain.Bible.Verse", b =>
                {
                    b.Property<string>("Book")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Chapter")
                        .HasColumnType("int");

                    b.Property<int>("VerseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Book", "Chapter", "VerseNumber");

                    b.HasIndex("Text")
                        .HasAnnotation("Npgsql:TsVectorConfig", "spanish");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Text"), "GIN");

                    b.ToTable("verses", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
